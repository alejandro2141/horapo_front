<script setup>
import { ref } from 'vue'
import axios from 'axios';


</script>

<template>
     
     <div id="calendar">
				 <div v-if="month_calendar && month_calendar.weeks" class="w-100 d-flex justify-content-between"  > 
					<i></i>  <i v-if="month_calendar" style="font-size: 2em;" @click="showHiddeMonthSelector()" >  {{month_calendar.month_name}} {{month_calendar.year}} </i>  <i> </i>	
					 </div>

					<!-- Month Selector -->
					<div  v-bind:style="{visibility:  visible_month_selector }" id="month" class="d-flex justify-content-center position-fixed  w-100 ">
						<ul class="list-group" >
							<li class="list-group-item display-4" ><i class="fas fa-caret-up"></i></li>
							<li class="list-group-item display-4" @click="changeMonth('2021-03')" >Marzo 2021</li>
							<li class="list-group-item display-4" @click="changeMonth('2021-04')" >Abril 2021</li>
							<li class="list-group-item display-4" @click="changeMonth('2021-05')" >Mayo 2021</li>
							<li class="list-group-item display-4" @click="changeMonth('2021-06')" >Junio 2021</li>
							<li class="list-group-item display-4" @click="changeMonth('2021-07')" >Julio 2021</li>
							<li class="list-group-item display-4" ><i class="fas fa-caret-down"></i></li>
						</ul>
					</div>
					
					 <!-- END Month Selector -->
					<div  v-if="month_calendar" v-bind:style="{display:  visible_summary_calendar }" >	
							<table class="table ">
							  <thead>
								<tr>
								  <th scope="col" class="text-danger" >Lu</th>
								  <th scope="col" class="text-danger" >Ma</th>
								  <th scope="col" class="text-danger" >Mi</th>
								  <th scope="col" class="text-danger" >Ju</th>
								  <th scope="col" class="text-danger" >Vi</th>
								  <th scope="col" class="text-danger" >Sa</th>
								  <th scope="col" class="text-danger" >Do</th>
								   <th scope="col" class="text-danger" ></th>
								</tr>
							  </thead>
							  <tbody>
							
                            <!-- <div v-if="month_calendar" > -->

								<tr   v-for="(week) in month_calendar.weeks" :key="week.id" >
								  <td class="" v-for="(day) in week.days" :key="day.id"   @click="setRequiredDay(day.year+'-'+day.month+'-'+day.day)"  v-on:click="$emit('set_daterequired',day.year+'-'+day.month+'-'+day.day)" >
										<div v-if="day.month+'-'+day.day == current_day_month " class="bg-danger m-0 p-0">
										{{day.day}}
										</div>
										<div v-else-if="day.month+'-'+day.day == required_day_month " class="bg-info m-0 p-0">
										{{day.day}}
										</div>
										<div v-else class=" m-0 p-0">
										{{day.day}}
										</div>
									
								  </td>
                                                          
								  <td>
								 <i class="far fa-copy"></i> 
								  </td>
								</tr>

                           <!--  </div> -->

							  </tbody>
							</table>
					
					</div>
				</div>
			

</template>

<style scoped>
</style>


<script>

export default {
   data : function() {
        return {
        visible_month_selector: 'hidden',
		visible_summary_calendar : 'block',
		month_calendar: null,
		required_day_month: null,
		current_day_month: null,	
        }   
    },
   	
    props: ['required_day'],
    
    emits: ['set_daterequired'] ,

	created () {
		console.log("CREATED CALENDAR-PICKER");
		this.currentDay=new Date().toISOString().split('T')[0];
	
		//this.current_day_month = this.currentDay.substring(5,7)+"-"+this.currentDay.substring(8,10)   ;
		this.current_day_month = this.currentDay.substring(5,10) 		;
		this.required_day_month = this.current_day_month ;
		this.getMonthCalendar(this.currentDay);
	},
	methods :{
			
		//GET MONTH CALENDAR
	async getMonthCalendar(required) {
			console.log("getMonthCalendar"+required);
			const json = { 
			    professional_id : '1' ,
				requiredDay : required ,
   			   	      };
			console.log ("getMonthCalendar REQUEST :"+ JSON.stringify(json)  );
			let response_json = await axios.post(BKND_CONFIG.BKND_HOST+"/professional_get_month_calendar",json);
			console.log ("getMonthCalendar RESPONSE :"+JSON.stringify(response_json.data)) ;
			this.month_calendar = response_json.data;
			
			},
	 //********* GO TO DAY
	
    setRequiredDay(year_month_day) {
    console.log("goToDay: "+year_month_day);
	this.required_day_month=year_month_day.substring(5,10);
	 //$emit('goToDay',year_month_day) ;
	}
   

    }
}
</script>

